{"version":3,"sources":["components/Detail.js","components/Painting.js","components/Collabsible.js","components/Content.js","App.js","index.js"],"names":["Detail","this","props","show","document","body","style","overflow","console","log","data","length","index","arrowStyle","curPainting","visibility","className","src","images","sizes","s","alt","title","description","repository","owner","structuredDimension","height","width","objectId","onClick","handleClose","id","prev","next","Component","Painting","useState","isOpen","setIsOpen","setCurPainting","paintings","filter","painting","dating","begin","year","toggleModal","useEffect","onChangeAmount","map","key","getElementById","display","Collapsible","amount","setAmount","changeAmount","prevAmount","Set","items","e","persist","target","classList","toggle","content","nextElementSibling","maxHeight","scrollHeight","onCollapsible","baseUrl","Content","state","isLoaded","setState","Array","isArray","fetchData","language","location","search","prevProps","url","fetch","then","res","json","catch","React","App","tmpId","handleLangChange","event","value","handleInputChange","submitInput","preventDefault","onSubmit","type","placeholder","onChange","path","render","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.bd93518c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {FiArrowRight, FiArrowLeft} from \"react-icons/fi\";\r\nimport \"../css/Detail.css\";\r\n\r\nclass Detail extends Component {\r\n\r\n  render() {\r\n    //console.log(this.props.show);\r\n    if(!this.props.show) {\r\n      //make body scrollable again\r\n      document.body.style.overflow = \"\"\r\n      return null;\r\n    } else {\r\n      //prevent scrollable background\r\n      document.body.style.overflow = \"hidden\"\r\n      console.log(this.props.data.length);\r\n      console.log(this.props.index);\r\n      var curPainting = this.props.data[this.props.index]\r\n      var arrowStyle\r\n      if(this.props.data.length==1){\r\n        arrowStyle = {visibility: \"hidden\"}\r\n      }else {arrowStyle = {visibility: \"visible\"}}\r\n\r\n      return (\r\n        <div className=\"modal-backdrop\">\r\n          <div className=\"mymodal\">\r\n            <div className=\"modal-content\">\r\n              <img className=\"modal-image\" src={curPainting.images?.sizes?.s?.src} alt=\"no picture available\"/>\r\n              <div className=\"modal-info\">\r\n                <h2 className=\"modal-info-title\" >{curPainting.title}</h2>\r\n                <p className=\"modal-info-descr\">{curPainting.description}</p>\r\n                <h6 className=\"modal-info-repo\">{curPainting.repository}</h6>\r\n                <h6 className=\"modal-info-owner\">\r\n                  {(curPainting.repository === curPainting.owner) ? \"\" : curPainting.owner}\r\n                </h6>\r\n                <h6 className=\"modal-info-dim\">\r\n                  {curPainting.structuredDimension?.height + \" x \" + curPainting.structuredDimension?.width + \" cm\"}\r\n                </h6>\r\n                <h6 className=\"modal-info-id\">ID: {curPainting.objectId} </h6>\r\n                <button className=\"modal-info-button\" onClick={this.props.handleClose}> X </button>\r\n                <button id=\"arr-left\" style={arrowStyle} className=\"modal-info-prev\"> \r\n                  <FiArrowLeft  className=\"modal-info-arrows\" onClick={this.props.prev}/>\r\n                </button>\r\n                <button id=\"arr-right\" style={arrowStyle} className=\"modal-info-next\"> \r\n                  <FiArrowRight className=\"modal-info-arrows\" onClick={this.props.next}/> \r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }}\r\n}\r\n\r\nexport default Detail;","import React, { useEffect, useState } from 'react';\r\nimport Detail from './Detail';\r\nimport \"../css/Painting.css\";\r\n\r\nfunction Painting (props) {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [curPainting, setCurPainting] = useState(0) \r\n\r\n  //filter paintings by callabsible year\r\n  const paintings = props.paintings.filter(painting => painting.dating.begin === props.year) \r\n\r\n  //open modal when closed, othwerise open it. set index to index of painting clicked\r\n  const toggleModal = (index) => {\r\n    setIsOpen(!isOpen)\r\n    setCurPainting(index)\r\n  }\r\n\r\n  //set index +1 to render next painting. if index reaches end of array do nothing\r\n  const nextPainting = () => {\r\n    if(curPainting === paintings.length-1) {\r\n      return null\r\n    } else {\r\n      if(curPainting+1 === paintings.length-1) document.getElementById(\"arr-right\").style.display=\"none\"\r\n      document.getElementById(\"arr-left\").style.display=\"initial\"\r\n      console.log(\"next\");\r\n      setCurPainting(curPainting+1)\r\n    }\r\n  }\r\n\r\n  //set index -1 to render previous painting. if index reaches beginning of array do nothing\r\n  const prevPainting = () => {\r\n    if(curPainting === 0) {\r\n      return null\r\n    } else {\r\n      if(curPainting-1 === 0) document.getElementById(\"arr-left\").style.display=\"none\"\r\n      document.getElementById(\"arr-right\").style.display=\"initial\"\r\n      console.log(\"prev\");\r\n      setCurPainting(curPainting-1)\r\n    }\r\n  }\r\n\r\n  //update amount of paintings in collapsible. empty array as second parameter added to avoid infinite loop\r\n  useEffect(() => {\r\n    props.onChangeAmount(paintings.length)\r\n  },[])\r\n\r\n  //return a painting preview card for each filtered painting\r\n  return (\r\n    <div>\r\n      {paintings.map((painting, index) => (\r\n        <div className=\"card\" key={index} onClick={()=>toggleModal(index)}>\r\n          <img className= \"painting-image\" src={painting?.images?.sizes?.s?.src} alt={painting?.title}/>\r\n        </div>\r\n      ))}\r\n      <Detail show={isOpen} data = {paintings} index = {curPainting} next = {nextPainting} prev = {prevPainting} handleClose = {toggleModal}/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Painting","import React, { useEffect, useState } from \"react\";\r\nimport Painting from \"./Painting\";\r\nimport Detail from \"./Detail\";\r\nimport {ImImage} from \"react-icons/im\"\r\nimport '../css/Collapsible.css';\r\n\r\nfunction onCollapsible(e) {\r\n  e.persist();\r\n  e.target.classList.toggle(\"active\");\r\n  const content = e.target.nextElementSibling;\r\n  if (content.style.maxHeight) {\r\n    content.style.maxHeight = null;\r\n  } else {\r\n    content.style.maxHeight = content.scrollHeight + \"px\";\r\n  }\r\n}\r\n\r\nfunction Collapsible(props) {\r\n  const [amount, setAmount] = useState([])\r\n\r\n  //set amount received from Painting\r\n  const changeAmount = (amount) => {\r\n    //console.log(\"cA: \" + amount);\r\n    setAmount(prevAmount => [...prevAmount, amount])\r\n  }\r\n  \r\n  //create new array with unique datings of paintings\r\n  const dateList = [...new Set(props.items.map(data => data.dating.begin))]\r\n\r\n  //return a collapsible for each dating in dateList array and fill it with paintings\r\n  return dateList.map((year, index) => (\r\n    <div key={year} className=\"collapsible\">\r\n      <div className=\"collapsible-header\" onClick={e => onCollapsible(e)}> \r\n        <h1 className=\"collapsible-title\">{year}</h1>\r\n        <div className=\"collapsible-divider-1\"/>\r\n        <div className=\"collapsible-img-div\">\r\n          <ImImage className = \"collapsible-image\"/>\r\n          <p className=\"collapsible-number\">{amount[index]}</p>\r\n        </div>\r\n        <div className=\"collapsible-divider-2\"/>\r\n      </div>\r\n      <div className=\"collapsible-content\">\r\n        <Painting paintings = {props.items} year = {year} onChangeAmount = {changeAmount} />\r\n      </div>\r\n    </div>\r\n  ));\r\n  \r\n}\r\n    \r\n\r\nexport default Collapsible;","import React from 'react';\r\nimport Collapsible from './Collabsible';\r\n\r\nconst baseUrl = \"https://project-bpo3-wechsler-backend.herokuapp.com/api/\";\r\nconst apiVersion = \"v2/\"\r\n\r\nclass Content extends React.Component{\r\n\r\n  state = {\r\n    items: [],\r\n    isLoaded: false,\r\n    isOpen: false\r\n  };\r\n\r\n\r\n  render() {\r\n    var {isLoaded, items, isOpen} = this.state;\r\n\r\n    if(!isLoaded) {\r\n      return <div>Loading...</div>\r\n    } else {\r\n      if(Array.isArray(items)) {\r\n        console.log(\"DATA IS ARRAY\");\r\n        return (\r\n          <div>\r\n            <Collapsible items = {items}/>\r\n          </div>\r\n        );\r\n      }else{\r\n        console.log(\"DATA IS OBJECT\");\r\n        console.log(isOpen);\r\n        return(\r\n          <Collapsible items = {new Array(items)}/>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({isOpen: !this.state.isOpen})\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData(baseUrl + apiVersion + this.props.language + \"/paintings\" + this.props.location.search)\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(this.props.language !== prevProps.language) {\r\n      console.log(\"fetching new data by language\");\r\n      this.fetchData(baseUrl + apiVersion + this.props.language + \"/paintings/\" + this.props.location.search)\r\n    }\r\n\r\n    if(this.props.id > 0 && this.props.id !== prevProps.id) {\r\n      console.log(\"fetching new data by id\")\r\n      this.fetchData(baseUrl + apiVersion + this.props.language + \"/paintings/\" + this.props.id)\r\n    }\r\n  }\r\n  \r\n  fetchData(url) {\r\n    console.log(\"fetching data\");\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then((data) => this.setState({\r\n        isLoaded: true,\r\n        items: data}))\r\n      .catch(console.log)\r\n  }\r\n}\r\n\r\nexport default Content;","import React, { Component } from 'react';\nimport {Route} from 'react-router-dom'\nimport './css/App.css';\nimport Content from './components/Content'\n\nclass App extends Component {\n\n  state = {\n    language: \"de\",\n    id: 0\n  }\n\n  tmpId = 0\n\n  handleLangChange= (event) => {    \n    this.setState({language: event.target.value});  \n  }\n\n  handleInputChange = (event) => {\n    this.tmpId = event.target.value\n  }\n\n  submitInput = (event) => {\n    event.preventDefault();\n    this.setState({id: this.tmpId})\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"App-header-content\">\n            <h1 className=\"header-title\">CDA_</h1> \n            <form className=\"header-input\" onSubmit={this.submitInput}>\n              <input type=\"number\" placeholder=\" :id\" onChange={this.handleInputChange}/> \n              <input type=\"submit\" value=\"go\" />\n            </form>\n            <select className=\"header-lang-select\" value={this.state.language} onChange={this.handleLangChange}>\n              <option value=\"de\">Deutsch</option>\n              <option value=\"en\">English</option>\n            </select>\n          </div>\n        </header>\n        <div className=\"App-main\">\n          <Route path=\"/\" render={(props) => ( \n            <Content {...props} language = {this.state.language} id={this.state.id}/>\n          )}\n          />\n        </div>\n      </div>\n    );\n  } \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nimport './css/index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}